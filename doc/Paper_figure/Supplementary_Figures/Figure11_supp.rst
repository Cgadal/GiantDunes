
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "Paper_figure/Supplementary_Figures/Figure11_supp.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_Paper_figure_Supplementary_Figures_Figure11_supp.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_Paper_figure_Supplementary_Figures_Figure11_supp.py:


============================
Figure 11 -- Online Resource
============================

.. GENERATED FROM PYTHON SOURCE LINES 7-72



.. image-sg:: /Paper_figure/Supplementary_Figures/images/sphx_glr_Figure11_supp_001.png
   :alt: Figure11 supp
   :srcset: /Paper_figure/Supplementary_Figures/images/sphx_glr_Figure11_supp_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    import numpy as np
    import os
    import matplotlib.pyplot as plt
    import sys
    sys.path.append('../../')
    import python_codes.theme as theme
    from python_codes.plot_functions import plot_scatter_surrounded

    theme.load_style()

    # paths
    path_savefig = '../../Paper/Figures'
    path_outputdata = '../../static/data/processed_data/'

    # Loading data
    Data = np.load(os.path.join(path_outputdata, 'Data_final.npy'), allow_pickle=True).item()

    labels = [r'\textbf{a}', r'\textbf{b}']

    # preparing data
    Stations = ['South_Namib_Station', 'Deep_Sea_Station']

    Nocturnal_wind = {'South_Namib_Station': [150, 260], 'Deep_Sea_Station': [150, 230]}

    # variables
    x1 = np.concatenate([Data[station]['U_star_era'][(Data[station]['Orientation_era'] > Nocturnal_wind[station][0]) & (Data[station]['Orientation_era'] < Nocturnal_wind[station][1])]
                         for station in Stations])
    y1 = np.concatenate([Data[station]['U_star_insitu'][(Data[station]['Orientation_era'] > Nocturnal_wind[station][0]) & (Data[station]['Orientation_era'] < Nocturnal_wind[station][1])]
                         for station in Stations])
    t1 = np.concatenate([Data[station]['time'][(Data[station]['Orientation_era'] > Nocturnal_wind[station][0]) & (Data[station]['Orientation_era'] < Nocturnal_wind[station][1])]
                         for station in Stations])

    hours = [i.hour for i in t1]
    #
    x2 = np.concatenate([Data[station]['U_star_era'][~((Data[station]['Orientation_era'] > Nocturnal_wind[station][0]) & (Data[station]['Orientation_era'] < Nocturnal_wind[station][1]))]
                         for station in Stations])
    y2 = np.concatenate([Data[station]['U_star_insitu'][~((Data[station]['Orientation_era'] > Nocturnal_wind[station][0]) & (Data[station]['Orientation_era'] < Nocturnal_wind[station][1]))]
                         for station in Stations])

    X = [x1, x2]
    Y = [y1, y2]

    # #### Figure
    pad_angle = 2
    labels = [r'\textbf{a}', r'\textbf{b}']
    alphas = [0.075, 0.045]

    fig, axarr = plt.subplots(1, 2, figsize=(theme.fig_width, 0.53*theme.fig_width),
                              constrained_layout=True, sharey=True)

    for i, (ax, label, x, y, alpha) in enumerate(zip(axarr, labels, X, Y, alphas)):
        plt.sca(ax)
        plot_scatter_surrounded(x, y, color='tab:blue', alpha=alpha)
        ax.plot([0, 0.6], [0, 0.6], 'k--')
        ax.set_xlabel(r'$u_{*, \textup{ERA}}~[\textup{m}~\textup{s}^{-1}]$')
        ax.set_xlim(0, 0.57)
        ax.set_ylim(0, 0.57)
        ax.text(0.05, 0.95, label, ha='center', va='center', transform=ax.transAxes)
        ax.set_aspect('equal')

    axarr[0].set_ylabel(r'$u_{*, \textup{local}}~[\textup{m}~\textup{s}^{-1}]$')

    plt.savefig(os.path.join(path_savefig, 'Figure11_supp.pdf'), dpi=400)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  2.148 seconds)


.. _sphx_glr_download_Paper_figure_Supplementary_Figures_Figure11_supp.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: Figure11_supp.py <Figure11_supp.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: Figure11_supp.ipynb <Figure11_supp.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
